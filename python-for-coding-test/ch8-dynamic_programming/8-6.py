'''
8장 다이나믹 프로그래밍 실전문제3 - 개미 전사
난이도: 중, 풀이시간: 30분, 시간제한: 1초, 메모리제한: 128MB

문제설명
메뚜기 마을에 있는 일직선으로 된 식량창고
식량창고에는 정해진 수의 식량을 저장하고 있다.
개미전사는 식량창고를 선택적으로 약탈한다.
들키지 않고 식량창고를 약탈하기 위해 최소 한 칸 이상 떨어진 식량창고를 약탈해야한다.

예를 들어 [1, 3, 1, 5] 식량 창고가 있을 때
2, 4번째 식량창고를 선택했을 때 최댓값인 8개의 식량을 빼앗을 수 있다.
일직선의 식량창고 정보가 주어졌을 때 얻을 수 있는 식량의 최댓값을 구하라.

입력조건
첫째 줄에 식량창고의 개수 N이 주어진다.(3<=X<=100)
둘째 줄에 공백으로 구분되어 각 식량창고에 저장된 식량의 개수 K가 주어진다. (3<=X<=100)

출력조건
첫째 줄에 개미전사가 얻을 수 있는 식량의 최댓값을 출력하시오.

문제풀이 아이디어
i번째 창고를 털지말지 결정해야함
i-1번째 창고를 털 경우 i번째는 털 수 없음
i-2번째 창고를 턴다면 i번째는 털 수 있음
즉(i-1) 와 (i-2)+i 중에 더 많은 것을 선택하면 된다.

이때 i-3이하는 이미 계산되어있기때문에 고려할 필요가 없다.
다이나믹 프로그래밍, 보텀업 방식으로 구현 가능
'''
n = int(input())# 식량창고 개수 N
k = list(map(int, input().split()))# 식량창고에 저장된 식량의 개수 K, 공백으로 구분

dp = [0] * 100 # dp 테이블초기화, 최대값 100

dp[0], dp[1] = k[0], max(k[0], k[1])

# n개의 식량창고 탐색
for i in range(2, n):
  dp[i] = max(dp[i-2] + k[i], dp[i-1])

print(dp[n-1]) # 결과 출력  
